# mangle vars
mangle_config_file = ${cfgver}_mangle_${mangle_version}.params
mangle_version = Y3A1v1
pol_prefix = ${unitname}_r${reqnum}p${attnum:2}_${band}
pol_label = bleedmask, ccdgons_weight, ccdmolys_weight, maglims, starmask, molys_weight
molys_prefix = ${unitname}_r${reqnum}p${attnum:2}_${band}_molys
molys_suffix_only = area, count, maglims, red, time, weight
molys_qalabel = AIRMASS, EXPTIME, FWHM, SKYBRITE, SKYSIGMA
molys_suffix = MAX, MEAN, MEDIAN, MIN, SUM, WMEAN

<module>
    <mangle>
        #max_fwthreads = ${nthreads}
        modnamepat = ${modnamepat_tile_band}
        wrappername = genwrap.py
        wrapperloop = band
        loopobj = list.red
        <exec_1>
            <cmdline>
                db_section = ${target_des_db_section}
                band = ${band}
                poltiles = ${file.poltiles.fullname}
                poltolys = ${file.poltolys.fullname}
                paramfile = ${file.mangle_config.fullname}
                runn = ${tilename}_r${reqnum}p${attnum:2}
                pfw_attempt_id = ${pfw_attempt_id}
                mzpglobal = ${mag_zero}
                list_nwgint = ${list.nwgint.fullname}
                list_redimg = ${list.red.fullname}
                tilename = ${tilename}
                tileid = ${tileid}
                coadd = ${file.coadd.fullname}
                outputdir = mangle/${band}
                molysprefix = ${molys_prefix}
                polprefix = ${pol_prefix}
                compare_plot1 = ${file.cmpplot1.fullname}
                compare_plot2 = ${file.cmpplot2.fullname}
                cleanup = Y
            </cmdline>
            execname = mangle_one_tile
            cmd_hyphen = mixed_gnu
            used = list.red.red_immask,list.nwgint.nwgint,file.poltiles,file.poltolys,file.mangle_config,file.coadd
            was_generated_by = file.polygons, file.molys_1, file.molys_2, file.cmpplot1, file.cmpplot2
            #ancestry = file.red_immask:file.nwgint
        </exec_1>
        <list>
            <red>
                # how to get list data
                depends null-weight-for-coadd.file.red_immask

                # how to create lists
                divide_by = band
                columns = red_immask.fullname, red_immask.mag_zero
                sortkey = fullname
                format = textcsv

                # what to name the list
                filepat = tile_band
                flabel = mangle-red
                fsuffix = list

                # where to put it (jobroot=rundir, archive=ops_enddir)
                dirpat = mepoch
                ops_enddir = list
                rundir = list
            </red>
            <nwgint>
                # how to get list data
                depends null-weight-for-coadd.file.nwgint

                # how to create lists
                divide_by = band
                columns = nwgint.fullname
                sortkey = fullname

                # what to name the list
                filepat = tile_band
                flabel = mangle-nwgint
                fsuffix = list

                # where to put it (jobroot=rundir, archive=ops_enddir)
                dirpat = mepoch
                ops_enddir = list
                rundir = list
            </nwgint>
        </list>
        <file>
            ### input files
            <mangle_config>
                # what input file is named
                filename = ${mangle_config_file}

                # where input file lives in jobroot
                dirpat = mepoch
                rundir = config
            </mangle_config>
            <poltiles>
                # what input file is named
                filename = ${mangle_version}_tiles_10s.${tileid}.pol

                # where input file lives in jobroot
                dirpat = mepoch
                rundir = mangle_tiles
            </poltiles>
            <poltolys>
                # what input file is named
                filename = ${mangle_version}_tolys_10s.${tileid}.pol

                # where input file lives in jobroot
                dirpat = mepoch
                rundir = mangle_tiles
            </poltolys>
            <coadd>
                # how to get file data
                depends band-assemble.file.coadd
                match = band

                # where input file lives in jobroot
                dirpat = mepoch
                rundir = coadd
            </coadd>
            <red_immask>
                listonly = True

                # where input file lives in jobroot
                dirpat = mepoch
                rundir = red
            </red_immask>
            <nwgint>
                listonly = True

                # where input file lives in jobroot
                dirpat = mepoch
                rundir = nwgint
            </nwgint>


            ### output files
            <cmpplot1>
                # what metadata to save
                filetype = mangle_qa

                # how to name output file
                filename = ${unitname}_r${reqnum}p${attnum:2}_${band}_mangle-1.png

                # whether to save or compress
                savefiles = true
                compress_files = false

                # where to put it (jobroot=rundir, archive=ops_enddir)
                dirpat = mepoch
                ops_enddir = qa/mangle
                rundir = qa/mangle
            </cmpplot1>
            <cmpplot2>
                # what metadata to save
                filetype = mangle_qa

                # how to name output file
                filename = ${unitname}_r${reqnum}p${attnum:2}_${band}_mangle-2.png

                # whether to save or compress
                savefiles = true
                compress_files = false

                # where to put it (jobroot=rundir, archive=ops_enddir)
                dirpat = mepoch
                ops_enddir = qa/mangle
                rundir = qa/mangle
            </cmpplot2>
            <molys_1>
                # what metadata to save
                filetype = mangle_molys

                # how to name output file
                filename = ${molys_prefix}.${molys_suffix_only}

                # whether to save or compress
                savefiles = true
                compress_files = false

                # where to put it (jobroot=rundir, archive=ops_enddir)
                dirpat = mepoch
                ops_enddir = mangle/${band}
                rundir = mangle/${band}
            </molys_1>
            <molys_2>
                # what metadata to save
                filetype = mangle_molys

                # how to name output file
                filename = ${molys_prefix}_${molys_qalabel}.${molys_suffix}

                # whether to save or compress
                savefiles = true
                compress_files = false

                # where to put it (jobroot=rundir, archive=ops_enddir)
                dirpat = mepoch
                ops_enddir = mangle/${band}
                rundir = mangle/${band}
            </molys_2>
            <polygons>
                # what metadata to save
                filetype = mangle_polygons

                # how to name output file
                filename = ${pol_prefix}_${pol_label}.pol

                # whether to save or compress
                savefiles = true
                compress_files = false

                # where to put it (jobroot=rundir, archive=ops_enddir)
                dirpat = mepoch
                ops_enddir = mangle/${band}
                rundir = mangle/${band}
            </polygons>
        </file>
    </mangle>
</module>
